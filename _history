{"entries":[{"timestamp":1754064856068,"editorVersion":"8.0.13","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":1,"length1":2,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":233,"length1":45,"diffs":[[1,"    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n"]]}]}]},{"timestamp":1754065461393,"editorVersion":"8.0.13","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":3,"length1":1,"diffs":[[1,""]]}]}]},{"timestamp":1754065714120,"editorVersion":"8.0.13","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":53,"diffs":[[1,""]]},{"start1":1,"length1":80,"diffs":[[1,""]]},{"start1":2,"length1":133,"diffs":[[1,""]]},{"start1":3,"length1":92,"diffs":[[1,""]]},{"start1":4,"length1":2729,"diffs":[[1,""]]}]}]},{"timestamp":1754066160321,"editorVersion":"8.0.13","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":53,"length1":19,"diffs":[[1,""]]},{"start1":100,"length1":44,"diffs":[[1,"    pedestrianRequested = true\n"]]},{"start1":181,"length1":19,"diffs":[[1,"    if (!raceMode) {\n"]]},{"start1":269,"length1":450,"diffs":[[1,"// Beep helper\n"]]},{"start1":362,"length1":0,"diffs":[[1,"// Countdown helper\n"]]},{"start1":540,"length1":0,"diffs":[[1,"// Pedestrian crossing sequence\n"]]},{"start1":610,"length1":86,"diffs":[[1,"    pins.digitalWritePin(DigitalPin.P2, 0) // Green OFF\n    pins.digitalWritePin(DigitalPin.P1, 1) // Yellow ON\n"]]},{"start1":756,"length1":86,"diffs":[[1,"    pins.digitalWritePin(DigitalPin.P1, 0) // Yellow OFF\n    pins.digitalWritePin(DigitalPin.P0, 1) // Red ON\n"]]},{"start1":1085,"length1":43,"diffs":[[1,"    pins.digitalWritePin(DigitalPin.P0, 1) // Red ON\n"]]},{"start1":1163,"length1":0,"diffs":[[1,"// Race light sequence — fast blinking red, yellow, green repeatedly\n"]]},{"start1":1290,"length1":0,"diffs":[[1,"        // Red ON\n"]]},{"start1":1539,"length1":0,"diffs":[[1,"        // Yellow ON\n"]]},{"start1":1792,"length1":0,"diffs":[[1,"        // Green ON\n"]]},{"start1":2049,"length1":0,"diffs":[[1,"\n    // Turn all OFF at end\n"]]},{"start1":2237,"length1":713,"diffs":[[1,"    if (raceMode) {\n"]]},{"start1":2277,"length1":25,"diffs":[[1,"        raceMode = false  // STOP race mode right after sequence\n"]]},{"start1":2499,"length1":57,"diffs":[[1,"        // Red ON\n        pins.digitalWritePin(DigitalPin.P0, 1)\n"]]},{"start1":2685,"length1":0,"diffs":[[1,"        // Green ON\n"]]},{"start1":2799,"length1":59,"diffs":[[1,"        pins.digitalWritePin(DigitalPin.P2, 1)\n"]]},{"start1":2873,"length1":0,"diffs":[[1,"        // Yellow ON\n"]]},{"start1":2941,"length1":60,"diffs":[[1,"        pins.digitalWritePin(DigitalPin.P1, 1)\n"]]},{"start1":3085,"length1":0,"diffs":[[1,"\n\n\n\n\n\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":107,"length1":58,"diffs":[[1,"        \"microphone\": \"*\"\n"]]}]}]},{"timestamp":1754066753216,"editorVersion":"8.0.13","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":53,"length1":0,"diffs":[[1,"let hacked = false\n"]]},{"start1":119,"length1":31,"diffs":[[1,"    if (!hacked) pedestrianRequested = true\n"]]},{"start1":213,"length1":21,"diffs":[[1,"    if (!hacked) {\n"]]},{"start1":299,"length1":15,"diffs":[[1,"let lastClapTime = 0\nlet clapCooldown = 1000  // 1 second cooldown to avoid double triggers\n\n// Detect clap sound to toggle hacked mode\ninput.onSound(DetectedSound.Loud, function () {\n    let now = input.runningTime()\n    if (now - lastClapTime > clapCooldown) {\n        hacked = !hacked\n        if (hacked) {\n            basic.showString(\"HACKED\")\n        } else {\n            basic.showString(\"SAFE\")\n        }\n        lastClapTime = now\n    }\n})\n\n"]]},{"start1":827,"length1":20,"diffs":[[1,""]]},{"start1":985,"length1":32,"diffs":[[1,""]]},{"start1":1023,"length1":112,"diffs":[[1,"    pins.digitalWritePin(DigitalPin.P2, 0)\n    pins.digitalWritePin(DigitalPin.P1, 1)\n"]]},{"start1":1143,"length1":110,"diffs":[[1,"    pins.digitalWritePin(DigitalPin.P1, 0)\n    pins.digitalWritePin(DigitalPin.P0, 1)\n"]]},{"start1":1448,"length1":53,"diffs":[[1,"    pins.digitalWritePin(DigitalPin.P0, 1)\n"]]},{"start1":1516,"length1":69,"diffs":[[1,""]]},{"start1":1574,"length1":18,"diffs":[[1,""]]},{"start1":1805,"length1":21,"diffs":[[1,""]]},{"start1":2037,"length1":20,"diffs":[[1,""]]},{"start1":2274,"length1":28,"diffs":[[1,""]]},{"start1":2434,"length1":20,"diffs":[[1,"    if (hacked) {\n        // Hacked mode: blink all LEDs rapidly and play weird sound\n        for (let i = 0; i < 5; i++) {\n            pins.digitalWritePin(DigitalPin.P0, 1)\n            pins.digitalWritePin(DigitalPin.P1, 1)\n            pins.digitalWritePin(DigitalPin.P2, 1)\n            music.playTone(150, music.beat(BeatFraction.Sixteenth))\n            basic.pause(200)\n            pins.digitalWritePin(DigitalPin.P0, 0)\n            pins.digitalWritePin(DigitalPin.P1, 0)\n            pins.digitalWritePin(DigitalPin.P2, 0)\n            music.rest(music.beat(BeatFraction.Sixteenth))\n            basic.pause(200)\n        }\n        basic.showIcon(IconNames.Skull)  // Show hacked icon\n    } else if (raceMode) {\n"]]},{"start1":3167,"length1":65,"diffs":[[1,"        raceMode = false\n"]]},{"start1":3349,"length1":65,"diffs":[[1,"        pins.digitalWritePin(DigitalPin.P0, 1) // Red ON\n"]]},{"start1":3527,"length1":20,"diffs":[[1,""]]},{"start1":3621,"length1":47,"diffs":[[1,"        pins.digitalWritePin(DigitalPin.P2, 1) // Green ON\n"]]},{"start1":3707,"length1":21,"diffs":[[1,""]]},{"start1":3754,"length1":47,"diffs":[[1,"        pins.digitalWritePin(DigitalPin.P1, 1) // Yellow ON\n"]]},{"start1":3911,"length1":1,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":134,"length1":89,"diffs":[[1,"        \"audio-recording\": \"*\"\n"]]}]}]},{"timestamp":1754067349189,"editorVersion":"8.0.13","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":2499,"length1":1,"diffs":[[1,""]]},{"start1":3076,"length1":205,"diffs":[[1,""]]},{"start1":3085,"length1":0,"diffs":[[1,"\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":166,"length1":123,"diffs":[[1,"        \"pxt-sonar\": \"github:microsoft/pxt-sonar#v0.0.6\"\n"]]}]}]},{"timestamp":1754067893131,"editorVersion":"8.0.13","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":504,"diffs":[[1,"let pedestrianRequested = false\nlet raceMode = false\n\ninput.onButtonPressed(Button.A, function () {\n    pedestrianRequested = true\n})\n\ninput.onButtonPressed(Button.B, function () {\n    if (!raceMode) {\n        raceMode = true\n        basic.showString(\"RACE\")\n    }\n})\n\n// Beep helper\nfunction beep() {\n    music.playTone(880, music.beat(BeatFraction.Eighth))\n}\n\n// Countdown helper\nfunction countdown() {\n    for (let i = 3; i > 0; i--) {\n        basic.showNumber(i)\n        beep()\n        basic.pause(400)\n    }\n    basic.clearScreen()\n}\n\n// Pedestrian crossing sequence\nfunction handlePedestrianCrossing() {\n    pins.digitalWritePin(DigitalPin.P2, 0) // Green OFF\n    pins.digitalWritePin(DigitalPin.P1, 1) // Yellow ON\n    beep()\n    basic.pause(1000)\n\n    pins.digitalWritePin(DigitalPin.P1, 0) // Yellow OFF\n    pins.digitalWritePin(DigitalPin.P0, 1) // Red ON\n    beep()\n    basic.pause(500)\n\n    countdown()\n    basic.showIcon(IconNames.Yes)\n    music.playTone(659, music.beat(BeatFraction.Whole))\n    basic.pause(3000)\n    basic.clearScreen()\n\n    pedestrianRequested = false\n\n    pins.digitalWritePin(DigitalPin.P0, 1) // Red ON\n    basic.pause(2000)\n}\n\n// Race light sequence — fast blinking red, yellow, green repeatedly\nfunction raceLight() {\n    for (let i = 0; i < 10; i++) {\n        // Red ON\n        pins.digitalWritePin(DigitalPin.P0, 1)\n        pins.digitalWritePin(DigitalPin.P1, 0)\n        pins.digitalWritePin(DigitalPin.P2, 0)\n        music.playTone(988, music.beat(BeatFraction.Sixteenth))\n        basic.pause(150)\n\n        // Yellow ON\n        pins.digitalWritePin(DigitalPin.P0, 0)\n        pins.digitalWritePin(DigitalPin.P1, 1)\n        pins.digitalWritePin(DigitalPin.P2, 0)\n        music.playTone(1319, music.beat(BeatFraction.Sixteenth))\n        basic.pause(150)\n\n        // Green ON\n        pins.digitalWritePin(DigitalPin.P0, 0)\n        pins.digitalWritePin(DigitalPin.P1, 0)\n        pins.digitalWritePin(DigitalPin.P2, 1)\n        music.playTone(1760, music.beat(BeatFraction.Sixteenth))\n        basic.pause(150)\n    }\n\n    // Turn all OFF at end\n    pins.digitalWritePin(DigitalPin.P0, 0)\n    pins.digitalWritePin(DigitalPin.P1, 0)\n    pins.digitalWritePin(DigitalPin.P2, 0)\n}\n\nbasic.forever(function () {\n    if (raceMode) {\n        raceLight()\n        raceMode = false  // STOP race mode right after sequence\n        basic.showString(\"NORM\")\n    } else if (pedestrianRequested) {\n        handlePedestrianCrossing()\n    } else {\n        // Normal traffic light cycle\n\n        // Red ON\n        pins.digitalWritePin(DigitalPin.P0, 1)\n        pins.digitalWritePin(DigitalPin.P1, 0)\n        pins.digitalWritePin(DigitalPin.P2, 0)\n        basic.pause(3000)\n\n        // Green ON\n        pins.digitalWritePin(DigitalPin.P0, 0)\n        pins.digitalWritePin(DigitalPin.P1, 0)\n        pins.digitalWritePin(DigitalPin.P2, 1)\n        basic.pause(3000)\n\n        // Yellow ON\n        pins.digitalWritePin(DigitalPin.P0, 0)\n        pins.digitalWritePin(DigitalPin.P1, 1)\n        pins.digitalWritePin(DigitalPin.P2, 0)\n        beep()\n        basic.pause(1000)\n\n        // Back to Red ON explicitly\n        pins.digitalWritePin(DigitalPin.P0, 1)\n        pins.digitalWritePin(DigitalPin.P1, 0)\n        pins.digitalWritePin(DigitalPin.P2, 0)\n        basic.pause(1000)\n    }\n})\n"]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":357,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1754064856067,"editorVersion":"8.0.13","text":{"main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"1\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\",\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1754066753185,"editorVersion":"8.0.13","text":{"main.ts":"let pedestrianRequested = false\nlet raceMode = false\nlet hacked = false\n\ninput.onButtonPressed(Button.A, function () {\n    if (!hacked) pedestrianRequested = true\n})\n\ninput.onButtonPressed(Button.B, function () {\n    if (!hacked) {\n        raceMode = true\n        basic.showString(\"RACE\")\n    }\n})\n\nlet lastClapTime = 0\nlet clapCooldown = 1000  // 1 second cooldown to avoid double triggers\n\n// Detect clap sound to toggle hacked mode\ninput.onSound(DetectedSound.Loud, function () {\n    let now = input.runningTime()\n    if (now - lastClapTime > clapCooldown) {\n        hacked = !hacked\n        if (hacked) {\n            basic.showString(\"HACKED\")\n        } else {\n            basic.showString(\"SAFE\")\n        }\n        lastClapTime = now\n    }\n})\n\nfunction beep() {\n    music.playTone(880, music.beat(BeatFraction.Eighth))\n}\n\nfunction countdown() {\n    for (let i = 3; i > 0; i--) {\n        basic.showNumber(i)\n        beep()\n        basic.pause(400)\n    }\n    basic.clearScreen()\n}\n\nfunction handlePedestrianCrossing() {\n    pins.digitalWritePin(DigitalPin.P2, 0)\n    pins.digitalWritePin(DigitalPin.P1, 1)\n    beep()\n    basic.pause(1000)\n\n    pins.digitalWritePin(DigitalPin.P1, 0)\n    pins.digitalWritePin(DigitalPin.P0, 1)\n    beep()\n    basic.pause(500)\n\n    countdown()\n    basic.showIcon(IconNames.Yes)\n    music.playTone(659, music.beat(BeatFraction.Whole))\n    basic.pause(3000)\n    basic.clearScreen()\n\n    pedestrianRequested = false\n\n    pins.digitalWritePin(DigitalPin.P0, 1)\n    basic.pause(2000)\n}\n\nfunction raceLight() {\n    for (let i = 0; i < 10; i++) {\n        pins.digitalWritePin(DigitalPin.P0, 1)\n        pins.digitalWritePin(DigitalPin.P1, 0)\n        pins.digitalWritePin(DigitalPin.P2, 0)\n        music.playTone(988, music.beat(BeatFraction.Sixteenth))\n        basic.pause(150)\n\n        pins.digitalWritePin(DigitalPin.P0, 0)\n        pins.digitalWritePin(DigitalPin.P1, 1)\n        pins.digitalWritePin(DigitalPin.P2, 0)\n        music.playTone(1319, music.beat(BeatFraction.Sixteenth))\n        basic.pause(150)\n\n        pins.digitalWritePin(DigitalPin.P0, 0)\n        pins.digitalWritePin(DigitalPin.P1, 0)\n        pins.digitalWritePin(DigitalPin.P2, 1)\n        music.playTone(1760, music.beat(BeatFraction.Sixteenth))\n        basic.pause(150)\n    }\n    pins.digitalWritePin(DigitalPin.P0, 0)\n    pins.digitalWritePin(DigitalPin.P1, 0)\n    pins.digitalWritePin(DigitalPin.P2, 0)\n}\n\nbasic.forever(function () {\n    if (hacked) {\n        // Hacked mode: blink all LEDs rapidly and play weird sound\n        for (let i = 0; i < 5; i++) {\n            pins.digitalWritePin(DigitalPin.P0, 1)\n            pins.digitalWritePin(DigitalPin.P1, 1)\n            pins.digitalWritePin(DigitalPin.P2, 1)\n            music.playTone(150, music.beat(BeatFraction.Sixteenth))\n            basic.pause(200)\n            pins.digitalWritePin(DigitalPin.P0, 0)\n            pins.digitalWritePin(DigitalPin.P1, 0)\n            pins.digitalWritePin(DigitalPin.P2, 0)\n            music.rest(music.beat(BeatFraction.Sixteenth))\n            basic.pause(200)\n        }\n        basic.showIcon(IconNames.Skull)  // Show hacked icon\n    } else if (raceMode) {\n        raceLight()\n        raceMode = false\n        basic.showString(\"NORM\")\n    } else if (pedestrianRequested) {\n        handlePedestrianCrossing()\n    } else {\n        // Normal traffic light cycle\n        pins.digitalWritePin(DigitalPin.P0, 1) // Red ON\n        pins.digitalWritePin(DigitalPin.P1, 0)\n        pins.digitalWritePin(DigitalPin.P2, 0)\n        basic.pause(3000)\n\n        pins.digitalWritePin(DigitalPin.P0, 0)\n        pins.digitalWritePin(DigitalPin.P1, 0)\n        pins.digitalWritePin(DigitalPin.P2, 1) // Green ON\n        basic.pause(3000)\n\n        pins.digitalWritePin(DigitalPin.P0, 0)\n        pins.digitalWritePin(DigitalPin.P1, 1) // Yellow ON\n        pins.digitalWritePin(DigitalPin.P2, 0)\n        beep()\n        basic.pause(1000)\n    }\n})\n","README.md":"","pxt.json":"{\n    \"name\": \"1\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\",\n    \"languageRestriction\": \"javascript-only\"\n}\n"}}],"shares":[],"lastSaveTime":1754068255359}